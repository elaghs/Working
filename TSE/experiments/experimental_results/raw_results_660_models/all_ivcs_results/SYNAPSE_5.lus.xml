<?xml version="1.0"?>
<Results xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
  <Progress source="bmc" trueFor="1">
    <PropertyProgress name="OK"/>
  </Progress>
  <Progress source="bmc" trueFor="2">
    <PropertyProgress name="OK"/>
  </Progress>
  <Progress source="bmc" trueFor="3">
    <PropertyProgress name="OK"/>
  </Progress>
  <Progress source="bmc" trueFor="4">
    <PropertyProgress name="OK"/>
  </Progress>
  <Progress source="bmc" trueFor="5">
    <PropertyProgress name="OK"/>
  </Progress>
  <Progress source="bmc" trueFor="6">
    <PropertyProgress name="OK"/>
  </Progress>
  <Progress source="bmc" trueFor="7">
    <PropertyProgress name="OK"/>
  </Progress>
  <Progress source="bmc" trueFor="8">
    <PropertyProgress name="OK"/>
  </Progress>
  <Progress source="bmc" trueFor="9">
    <PropertyProgress name="OK"/>
  </Progress>
  <Progress source="bmc" trueFor="10">
    <PropertyProgress name="OK"/>
  </Progress>
  <Progress source="bmc" trueFor="11">
    <PropertyProgress name="OK"/>
  </Progress>
  <Progress source="bmc" trueFor="12">
    <PropertyProgress name="OK"/>
  </Progress>
  <Property name="OK">
    <Runtime unit="sec">2.818</Runtime>
    <Answer source="pdr">valid</Answer>
    <K>1</K>
    <NumberOfIVCs>1</NumberOfIVCs>
    <MustElem>Sofar~0.X</MustElem>
    <MustElem>synapse~0.dirty_s</MustElem>
    <MustElem>synapse~0.invalid_s</MustElem>
    <MustElem>Sofar~0.Sofar</MustElem>
    <MustElem>env</MustElem>
    <MustElem>synapse~0.mem_init_s</MustElem>
    <MustElem>First~0.First</MustElem>
    <MustElem>synapse~0.valid_s</MustElem>
    <MustElem>valid_s</MustElem>
    <MustElem>synapse~0.init_invalid_s</MustElem>
    <MustElem>synapse~0.garde_s1</MustElem>
    <MustElem>OK</MustElem>
    <MustElem>First~0.X</MustElem>
    <IvcSet number="1">
    <Invariant>((synapse~0.invalid_s + synapse~0.valid_s) &lt;= First~0.First)</Invariant>
    <Invariant>((synapse~0.valid_s = 0) or (synapse~0.dirty_s = 0))</Invariant>
    <Invariant>((((-synapse~0.valid_s) + 1) &lt;= 0) or (synapse~0.valid_s = 0))</Invariant>
    <Invariant>((1 = synapse~0.dirty_s) or (not (synapse~0.dirty_s &lt;&gt; 0)))</Invariant>
    <Invariant>((not (1 = synapse~0.dirty_s)) or (synapse~0.invalid_s &lt;= (First~0.First + (-1))))</Invariant>
    <Invariant>((synapse~0.invalid_s &lt;= (First~0.First + (-1))) or (synapse~0.valid_s = 0))</Invariant>
    <Invariant>OK</Invariant>
    <Invariant>(synapse~0.invalid_s &lt;= First~0.First)</Invariant>
    <Ivc>Sofar~0.X</Ivc>
    <Ivc>synapse~0.dirty_s</Ivc>
    <Ivc>Sofar~0.Sofar</Ivc>
    <Ivc>synapse~0.invalid_s</Ivc>
    <Ivc>env</Ivc>
    <Ivc>synapse~0.mem_init_s</Ivc>
    <Ivc>First~0.First</Ivc>
    <Ivc>synapse~0.valid_s</Ivc>
    <Ivc>valid_s</Ivc>
    <Ivc>synapse~0.init_invalid_s</Ivc>
    <Ivc>synapse~0.garde_s1</Ivc>
    <Ivc>OK</Ivc>
    <Ivc>First~0.X</Ivc>
    </IvcSet>
  </Property>
